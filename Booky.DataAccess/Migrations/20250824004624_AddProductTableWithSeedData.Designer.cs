// <auto-generated />
using Booky.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booky.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250824004624_AddProductTableWithSeedData")]
    partial class AddProductTableWithSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booky.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Scientific"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("Booky.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Price100")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("Price50")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Jon Skeet",
                            Description = "C# in Depth, Third Edition updates the best-selling second edition to cover the new features of C# 5, including the challenges of writing maintainable asynchronous code.",
                            ISBN = "9781617291340",
                            ListPrice = 50m,
                            Price = 11m,
                            Price100 = 1100m,
                            Price50 = 500m,
                            Title = "C# in Depth"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Andrew Troelsen",
                            Description = "A comprehensive guide to the C# language and the .NET 6 platform, covering everything from core language features to advanced topics.",
                            ISBN = "9781484278681",
                            ListPrice = 60m,
                            Price = 15m,
                            Price100 = 1050m,
                            Price50 = 550m,
                            Title = "Pro C# 10 and the .NET 6 Platform"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Adam Freeman",
                            Description = "Covers building modern, scalable web applications with ASP.NET Core, including MVC, Razor Pages, Web API, and deployment practices.",
                            ISBN = "9781617298301",
                            ListPrice = 65m,
                            Price = 18m,
                            Price100 = 1150m,
                            Price50 = 600m,
                            Title = "ASP.NET Core in Action"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Martin Fowler",
                            Description = "Classic book on refactoring techniques that help developers improve the structure and maintainability of existing codebases.",
                            ISBN = "9780134757599",
                            ListPrice = 70m,
                            Price = 20m,
                            Price100 = 1200m,
                            Price50 = 650m,
                            Title = "Refactoring: Improving the Design of Existing Code"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Robert C. Martin",
                            Description = "A must-read for any developer who wants to write cleaner, more maintainable code, with principles, practices, and case studies.",
                            ISBN = "9780132350884",
                            ListPrice = 75m,
                            Price = 22m,
                            Price100 = 1250m,
                            Price50 = 700m,
                            Title = "Clean Code: A Handbook of Agile Software Craftsmanship"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Eric Evans",
                            Description = "Seminal work introducing Domain-Driven Design (DDD) principles for handling large-scale and complex software projects.",
                            ISBN = "9780321125217",
                            ListPrice = 80m,
                            Price = 25m,
                            Price100 = 1300m,
                            Price50 = 750m,
                            Title = "Domain-Driven Design: Tackling Complexity in the Heart of Software"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
